单总线设备驱动
LCD驱动框架


+----------------+
| 单总线设备驱动 |
+----------------+
一线式总线(单总线,1-Wire):
特点:信号线只有1根,还是总线(说明在这一根信号线上可用外接很多的1线式器件),无时钟线. 
问:CPU是如何访问到具体的某一个从设备器件
问:没有时钟控制信号,CPU是如何和某个从设备器件进行数据交互. 
以DS18B20分辨率可编程的一线式数字温度传感器为例:
硬件特性:
1.属于一线式器件,CPU跟DS18B20之间的通信采用一根线进行
2.采集转换温度,数据线上输出的数字量,内部集成的ADC
3.分辨率:9,10,11,12
4.内部集成了64bit的ROM,存储每一个器件唯一的序列码
5.测量温度:默认的分辨率12bit,上电进入低功耗默认,要进行AD转换,CPU必须首先发送0x44,让其进行转换,转换以后的温度值存在内部RAM中的前2字节. 
6.内部集成了9字节的RAM,可用当寄存器来使用,CPU访问器件就是就是在访问器件中的RAM. 
7.内部RAM的划分:
  byte0,byte1:存放转换以后的温度值
  byte2, byte3: 存放设置的高,低温报警阀值
  byte4:存放配置的分辨率信息
8.内部集成3字节的EEPROM:存放设置的高低温报警阀值和配置的    分辨率信息
9.温度数据寄存器:得到温度的最小量度:0.0625
10.配置寄存器:配置分辨率
   0x1f->9, 0x3f->10,0x5f->11,0x7f->12
问:CPU通过一根数据线如何将DS18B20的分辨率配置为10位呢?也就是CPU怎么样将0x3f写入到配置寄存器中. 
问:CPU通过一根数据线如何从温度数据寄存器读取温度值呢?
答:CPU通过单总线访问器件的过程参看芯片手册,有三步骤:
   1.CPU发送一个复位初始化信号 《-》I2C的START信号
     申请GPIO
     配置GPIO为输出,输出0
     udelay(500);
     设置GPIO输出为1
     udelay(30);
     配置GPIO为输入,读取总线状态0:OK,1:FAIL

   2.CPU发送一个ROM COMMAND
     关于CPU如何访问具体某一个从设备芯片的命令
     READ 
     MATCH
     SKIP->0xcc
       问:CPU如何通过一根数据将将0xCC发送出去呢?
   3.CPU发送一个功能性命令:操作RAM命令
     CONVERTT:A/D转换 0x44
     WRITE RAM:写内存 0xBE
     READ  RAM:读内存 0x4E
       问:CPU如何通过一根数据将将命令发送出去呢?

答:由于一线总线没有时钟控制信号,读写0,1需要进行设定,不能随意读写0,1.DS18B20的数据操作从地位开始!通过参看芯片手册,得到CPU发送一个字节的命令,必须严格按照时序完成读写0,1.    

问:CPU如何通过以上的3步骤来进行对DS18B20的访问?
答:DS18B20给出三步骤操作的流程图,具体参看流程图:
以配置分辨率和读取温度为例:
配置分辨率的过程:
1.CPU发送初始化信号
2.CPU发送SKIP ROM(0xCC)
3.CPU发送WRITE RAM(0x4E)
4.CPU发送TH(100)
5.CPU发送TL(0)
6.CPU发送0x3f(分辨率为10)
如果要重新配置一个新的分辨率,必须重新走以上6步骤!

读取温度的过程:
1.CPU发送初始化信号
2.CPU发送SKIP ROM(0xCC)
3.CPU发送CONVETT转换命令(0x44),温度转换以后,值保存在RAM的byte0和byte1
4.CPU发送初始化信号
5.CPU发送SKIP ROM(0xCC)
6.CPU发送READ RAM(0xBE)
7.CPU读取byte0内存数据,温度的低位
8.CPU读取byte1内存数据,温度的高位
9.CPU发送初始化信号,结束后续RAM的读取

如果要在读温度,重新走以上9步骤!

设备操作维护软件添加:QT界面每个3s刷新板块DS18B20测量的温度信息!

+-------------+
| LCD驱动框架 |
+-------------+
LCD相关内容:
LCD显示的硬件原理:与其说是操作LCD,不如说是操作显存
图像在显存存放格式:32位,24位:RGB(888)
LCD面板和显存的一一对应关系!

LCD控制器操作LCD面板相关的硬件特性:
VD0~VD23:数据线,传输的是RGB颜色分量值(888)
VSYNC:垂直同步信号,控制画一帧的信号
HSYNC:水平同步信号,控制画一行的信号
VCLK:像素时钟信号,控制画一个像素点的信号
VDEN:数据时能信号,控制数据的有效性
像素时钟:33.3MHz(参看LCD面板的芯片手册查阅)
关于VSYNC,HSYNC,VCLK,VDEV的时序操作要严格按照LCD控制器的时序和LCD面板要求的时序来进行配置!
VSPW+1:表示垂直同步信号的有效脉冲宽度
VSPW+1=tvpw=10=>VSPW=9
VBPD+1:表示当发送完VSYNC多久以后,才能使能数据信号
VBPD+1=tvb-tvpw=23-10=>VBPD=12
VFPD+1:表示经过多久才能画下一帧数据
VFPD+1=tvfp=22=>VFPD=21
HSPW+1:表示水平同步信号的有效脉冲宽度
HSPW+1=20=》HSPW=19
HBPD+1:表示发送完HSYNC多久以后,使能数据
HBPD+1=46-20=26=》HBPD=25
HFPD+1:表示经过多久开始写下一行
HFPD+1=thfp=210=》HFPD=209

案例:在用户空间如何直接操作显存,达到改变LCD面板显示内容:具体代码参考lcd_test.c



